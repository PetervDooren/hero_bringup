########################################################################
#                                                                      #
# Simple Open EtherCAT Master (SOEM) deployer file 		       		   #
#                                                                      #
#                                                                      #
#                                                                      #
#                                                                      #
########################################################################

#### IMPORT PACKAGE ####
import("rtt_ros")
ros.import("amigo_hardware")

#### DECLARATION OF PARAMETERS ####
var double TS 					= 0.001
var string LEFT_ARM_SHOULDER 	= "Soem.Slave_1012"
var string LEFT_ARM_UPPERARM 	= "Soem.Slave_1013"
var string LEFT_ARM_LOWERARM 	= "Soem.Slave_1014"
var string RIGHT_ARM_SHOULDER 	= "Soem.Slave_1015"
var string RIGHT_ARM_UPPERARM 	= "Soem.Slave_1016"
var string RIGHT_ARM_LOWERARM 	= "Soem.Slave_1017"
		
#### MAKING PARAMETERS GLOBAL #### to do find a way to add a doubles/ints globally
loadService("HARDWARE","os")
os.setenv("LEFT_ARM_SHOULDER",LEFT_ARM_SHOULDER)
os.setenv("LEFT_ARM_UPPERARM",LEFT_ARM_UPPERARM)
os.setenv("LEFT_ARM_LOWERARM",LEFT_ARM_LOWERARM)
os.setenv("RIGHT_ARM_SHOULDER",RIGHT_ARM_SHOULDER)
os.setenv("RIGHT_ARM_UPPERARM",RIGHT_ARM_UPPERARM)
os.setenv("RIGHT_ARM_LOWERARM",RIGHT_ARM_LOWERARM)

#### LOAD SUPERVISOR ###
loadComponent("Supervisor","SUPERVISORY::Supervisor")
Supervisor.ebuttonorder	= strings("Wired","Wireless")
Supervisor.configure
setActivity("Supervisor",0.5,HighestPriority,ORO_SCHED_RT)
stream("Supervisor.ebuttonWired", ros.topic("/amigo/runstop"))
stream("Supervisor.ebuttonWireless", ros.topic("/amigo/emergency_switch"))
stream("Supervisor.rosshutdown", ros.topic("/amigo/etherCAT_shutdown")); 
stream("Supervisor.rosetherCATenabled", ros.topic("/amigo/etherCAT_enabled")); 
stream("Supervisor.hardware_status", ros.topic("/amigo/hardware_status"));
stream("Supervisor.dashboardCmd", ros.topic("/amigo/dashboard_ctrlcmds"));
stream("Supervisor.ebutton_status", ros.topic("/amigo/ebutton_status"));

#### Create Robot Object ####
var strings DEFAULT_PART_NAMES = strings("base","spindle","left_arm", "right_arm", "head", "generic")
Supervisor.CreateRobotObject("amigo", DEFAULT_PART_NAMES)

#### LOAD JOINTSTATEAGGREGATOR ####
loadComponent("JointStateAggregator","ROS::JointStateAggregator")
addPeer("Supervisor","JointStateAggregator")
setActivity("JointStateAggregator",0.02,LowestPriority, ORO_SCHED_OTHER)
JointStateAggregator.configure
stream("JointStateAggregator.out", ros.topic("/amigo/joint_states"))

#### LOAD TrajectoryActionlib ####
loadComponent("TrajectoryActionlib","ROS::TrajectoryActionlib")
addPeer("Supervisor","TrajectoryActionlib")
setActivity("TrajectoryActionlib",TS,HighestPriority, ORO_SCHED_RT)
loadService("TrajectoryActionlib","actionlib")
TrajectoryActionlib.actionlib.connect("/amigo/body/joint_trajectory_action");
TrajectoryActionlib.actionlib.connect("/amigo/left_arm/joint_trajectory_action");
TrajectoryActionlib.actionlib.connect("/amigo/right_arm/joint_trajectory_action");
TrajectoryActionlib.actionlib.connect("/amigo/torso_arm/joint_trajectory_action");
TrajectoryActionlib.configure

### LOAD ETHERCAT READ ###
loadComponent("EtherCATread","ETHERCATREAD::EtherCATread")
addPeer("Supervisor","EtherCATread")
EtherCATread.configure
setActivity("EtherCATread",TS,HighestPriority,ORO_SCHED_RT)
EtherCATread.bodypart_names = DEFAULT_PART_NAMES

### LOAD SOEM COMPONENT FOR ETHERCAT COMMUNICATION ###
loadComponent("Soem","soem_master::SoemMasterComponent")
addPeer("Supervisor","Soem")
Soem.configure
setActivity("Soem",TS,HighestPriority,ORO_SCHED_RT)
connect ("Soem.Slave_1002.Slave_1002_value", "Supervisor.serialRunning", ConnPolicy() )

### LOAD ETHERCAT WRITE ###
loadComponent("EtherCATwrite","ETHERCATWRITE::EtherCATwrite") 
addPeer("Supervisor","EtherCATwrite")
EtherCATwrite.configure
setActivity("EtherCATwrite",TS,HighestPriority,ORO_SCHED_RT)
EtherCATwrite.bodypart_names = DEFAULT_PART_NAMES

##### LOAD COMPONENT TO ENABLE ANALOG OUTS PERA ###
loadComponent("RPERA_AnalogOuts","SOEM::AnalogOutsGeneric")
addPeer("Supervisor","RPERA_AnalogOuts")
setActivity("RPERA_AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
RPERA_AnalogOuts.numberofinports    				= 1
RPERA_AnalogOuts.numberofoutports    				= 3
RPERA_AnalogOuts.input_sizes 						= array (8.0)
RPERA_AnalogOuts.output_sizes 						= array (3.0, 3.0, 3.0)
RPERA_AnalogOuts.output_positions 					= array (1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
RPERA_AnalogOuts.configure
connect ("RPERA_AnalogOuts.out1",RIGHT_ARM_SHOULDER+".pwmDutyMotors", ConnPolicy() );
connect ("RPERA_AnalogOuts.out2",RIGHT_ARM_UPPERARM+".pwmDutyMotors", ConnPolicy() );
connect ("RPERA_AnalogOuts.out3",RIGHT_ARM_LOWERARM+".pwmDutyMotors", ConnPolicy() );

#### LOAD COMPONENT TO ENABLE ANALOG OUTS PERA ###
loadComponent("LPERA_AnalogOuts","SOEM::AnalogOutsGeneric")
addPeer("Supervisor","LPERA_AnalogOuts")
setActivity("LPERA_AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
LPERA_AnalogOuts.numberofinports    				= 1
LPERA_AnalogOuts.numberofoutports    				= 3
LPERA_AnalogOuts.input_sizes 						= array (8.0)
LPERA_AnalogOuts.output_sizes 						= array (3.0, 3.0, 3.0)
LPERA_AnalogOuts.output_positions 					= array (1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
LPERA_AnalogOuts.configure
connect ("LPERA_AnalogOuts.out1",LEFT_ARM_SHOULDER+".pwmDutyMotors", ConnPolicy() );
connect ("LPERA_AnalogOuts.out2",LEFT_ARM_UPPERARM+".pwmDutyMotors", ConnPolicy() );
connect ("LPERA_AnalogOuts.out3",LEFT_ARM_LOWERARM+".pwmDutyMotors", ConnPolicy() );

##### LOAD COMPONENT TO ENABLE ANALOG INS PERA ###
loadComponent("RPERA_AnalogIns","SOEM::AnalogInsGeneric")
addPeer("Supervisor","RPERA_AnalogIns")
setActivity("RPERA_AnalogIns",TS,HighestPriority,ORO_SCHED_RT)
RPERA_AnalogIns.inport_dimensions                   = array (3.0, 3.0, 3.0, 3.0, 3.0, 3.0)
RPERA_AnalogIns.outport_dimensions                  = array (8.0, 8.0)
RPERA_AnalogIns.from_which_inport                   = array (1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0)
RPERA_AnalogIns.from_which_entry                    = array (1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0, 1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0)
RPERA_AnalogIns.configure
connect (RIGHT_ARM_SHOULDER+".forceSensors","RPERA_AnalogIns.beckhoffmsg_in_1", ConnPolicy() )
connect (RIGHT_ARM_UPPERARM+".forceSensors","RPERA_AnalogIns.beckhoffmsg_in_2", ConnPolicy() )
connect (RIGHT_ARM_LOWERARM+".forceSensors","RPERA_AnalogIns.beckhoffmsg_in_3", ConnPolicy() )
connect (RIGHT_ARM_SHOULDER+".positionSensors","RPERA_AnalogIns.beckhoffmsg_in_4", ConnPolicy() )
connect (RIGHT_ARM_UPPERARM+".positionSensors","RPERA_AnalogIns.beckhoffmsg_in_5", ConnPolicy() )
connect (RIGHT_ARM_LOWERARM+".positionSensors","RPERA_AnalogIns.beckhoffmsg_in_6", ConnPolicy() )

#### LOAD COMPONENT TO ENABLE ANALOG INS PERA ###
loadComponent("LPERA_AnalogIns","SOEM::AnalogInsGeneric")
addPeer("Supervisor","LPERA_AnalogIns")
setActivity("LPERA_AnalogIns",TS,HighestPriority,ORO_SCHED_RT)
LPERA_AnalogIns.inport_dimensions                   = array (3.0, 3.0, 3.0, 3.0, 3.0, 3.0)
LPERA_AnalogIns.outport_dimensions                  = array (8.0, 8.0)
LPERA_AnalogIns.from_which_inport                   = array (1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0)
LPERA_AnalogIns.from_which_entry                    = array (1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0, 1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0)
LPERA_AnalogIns.configure
connect (LEFT_ARM_SHOULDER+".forceSensors","LPERA_AnalogIns.beckhoffmsg_in_1", ConnPolicy() )
connect (LEFT_ARM_UPPERARM+".forceSensors","LPERA_AnalogIns.beckhoffmsg_in_2", ConnPolicy() )
connect (LEFT_ARM_LOWERARM+".forceSensors","LPERA_AnalogIns.beckhoffmsg_in_3", ConnPolicy() )
connect (LEFT_ARM_SHOULDER+".positionSensors","LPERA_AnalogIns.beckhoffmsg_in_4", ConnPolicy() )
connect (LEFT_ARM_UPPERARM+".positionSensors","LPERA_AnalogIns.beckhoffmsg_in_5", ConnPolicy() )
connect (LEFT_ARM_LOWERARM+".positionSensors","LPERA_AnalogIns.beckhoffmsg_in_6", ConnPolicy() )

#### START COMPONENTS ####
Supervisor.AddAllwaysOnPeer ("JointStateAggregator")
Supervisor.AddAllwaysOnPeer ("TrajectoryActionlib")
Supervisor.AddAllwaysOnPeer ("RPERA_AnalogOuts")
Supervisor.AddAllwaysOnPeer ("LPERA_AnalogOuts")
Supervisor.AddAllwaysOnPeer ("EtherCATread")
Supervisor.AddAllwaysOnPeer ("Soem")
Supervisor.AddAllwaysOnPeer ("EtherCATwrite")
Supervisor.AddAllwaysOnPeer ("RPERA_AnalogIns")
Supervisor.AddAllwaysOnPeer ("LPERA_AnalogIns")
Supervisor.setPeriod(0.01)
Supervisor.start()

#### DIGITAL OUTS ####
EtherCATwrite.AddDigitalOuts("generic", array(1.0, 1.0, 1.0, 1.0, 1.0, 1.0), array(8.0, 8.0), array(1.0, 0.0, 3.0, 0.0, 0.0, 4.0, 5.0, 6.0, 3.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), array(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))
EtherCATwrite.AddForcedHigh_D("generic",1);										# IN1: Forced High, # IN2: BaseSafety.enable, # IN3: SpindleSafety.enable, # IN4: RGB:R, # IN5: RGB:G, # IN6: RGB:B, 		 
connect ("EtherCATwrite.generic_Dout1","Soem.Slave_100b.bits", ConnPolicy() ); 	# OUT1: 	1 Enable amps (D04:DO1)		 3 SpindleSafety.enable (brake)	6 RGB:R 	7 RGB:G 	8 RGB:B
connect ("EtherCATwrite.generic_Dout2","Soem.Slave_100c.bits", ConnPolicy() ); 	# OUT2: 	1 SpindleSafety.enable (amp) 2 BaseSafety.enable (amp)

#### DIGITAL INS ####
EtherCATread.AddDigitalIns("generic", array(8.0), array(1.0, 1.0, 1.0, 1.0, 1.0, 1.0), array(1.0, 1.0, 1.0, 1.0, 1.0, 1.0), array(1.0, 2.0, 3.0, 4.0, 5.0, 6.0))
connect ("Soem.Slave_1009.bits", "EtherCATread.generic_Din1", ConnPolicy() )
EtherCATread.AddFlip_D("generic", 5)
EtherCATread.AddFlip_D("generic", 6)
EtherCATread.AddMsgOut_D("generic",1)
EtherCATread.AddMsgOut_D("generic",2)
EtherCATread.AddMsgOut_D("generic",3)
EtherCATread.AddMsgOut_D("generic",4)
EtherCATread.AddMsgOut_D("generic",5)
EtherCATread.AddMsgOut_D("generic",6)
stream("EtherCATread.generic_DoutMsg1", ros.topic("/amigo/fuse1"))
stream("EtherCATread.generic_DoutMsg2", ros.topic("/amigo/fuse2"))
stream("EtherCATread.generic_DoutMsg3", ros.topic("/amigo/fuse3"))
stream("EtherCATread.generic_DoutMsg4", ros.topic("/amigo/fuse4"))
stream("EtherCATread.generic_DoutMsg5", ros.topic("/amigo/runstop"))
stream("EtherCATread.generic_DoutMsg6", ros.topic("/amigo/emergency_switch"))

#### BATTERY IN ####
EtherCATread.AddAnalogIns("generic", array(1.0), array(1.0), array(1.0), array(1.0))
connect ("Soem.Slave_100e.values","EtherCATread.generic_Ain1", ConnPolicy() );
EtherCATread.AddMsgOut_A("generic",1)
stream("EtherCATread.generic_AoutMsg1", ros.topic("/amigo/battery_value"))




